import t from"fs";import e from"path";import{VirtualConsole as r,JSDOM as s}from"jsdom";import o from"cli-progress";import n from"colors";import i from"cfonts";import a from"axios";import l from"sitemap-stream-parser";import h from"express";const u={titleLengthRule:function(t,e){return new Promise(r=>{const s=t.window.document.querySelector("title");s||r("This HTML without <title> tag");const o=s.length;o<e.min&&r(`<title> too short(${o}). The minimum length should be ${e.min} characters.`),o>e.max&&r(`<title> too long(${o}). The maximum length should be ${e.max} characters.`),r(null)})},hTagsRule:function(t){return new Promise(e=>{let r="";const s=t.window.document.querySelectorAll("h1, h2, h3, h4, h5, h6");for(let t=0;t<s.length;t+=1){const e=s[t],o=s[t+1];if(o){const n=e.tagName.toLowerCase().replace("h",""),i=o.tagName.toLowerCase().replace("h","");if(n<i-1&&n!==i-1){r+=`Tag <h${i}>${s[t+1].textContent.replace(/(\r\n|\n|\r)/gm,"").trim()}</h${i}> should be </h${+n+1}>`}}}e(r)})},noTooManyStrongTagsRule:function(t,e){return new Promise(r=>{const s=t.window.document.querySelectorAll("strong");s&&s.length>e.threshold&&r(`This HTML have more than ${e.threshold} <strong> tags`),r(null)})},noMoreThanOneH1TagRule:function(t){return new Promise(e=>{const r=t.window.document.querySelectorAll("h1");r&&r.length>1&&e("This HTML have more than one <h1> tag"),e(null)})},imgTagWithAltAttritubeRule:function(t){return new Promise(e=>{let r=0;t.window.document.querySelectorAll("img").forEach(t=>{t.alt||r++}),r>0&&e(`There are ${r} <img> tag without alt attribute`),e(null)})},aTagWithRelAttritubeRule:function(t){return new Promise(e=>{let r=0;t.window.document.querySelectorAll("a").forEach(t=>{t.rel||r++}),r>0&&e(`There are ${r} <a> tag without rel attribute`),e(null)})},canonicalLinkRule:function(t){return new Promise(e=>{const r=t.window.document.querySelector('head > link[rel="canonical"]');r||e('This HTML without <link rel="canonical" href="..."> link'),r&&!r.href&&e("The canonical link without href attribute"),r&&"/"!==r.href.substr(-1)&&e("The href attribute does not have a slash at the end of the link."),e(null)})},metaBaseRule:function(t,e={list:[]}){return new Promise(r=>{const s=[];e&&e.names&&e.names.length&&e.names.forEach(e=>{const r=t.window.document.querySelector(`head > meta[name="${e}"]`);r?r.content||s.push(`The content attribute for the <meta name="${e}" content=""> tag is empty`):s.push(`This HTML without <meta name="${e}"> tag`)}),r(s)})},metaSocialRule:function(t,e={properties:[]}){return new Promise(r=>{const s=[];e&&e.properties&&e.properties.length&&e.properties.forEach(e=>{const r=t.window.document.querySelector(`head > meta[property="${e}"]`);r?r.content||s.push(`The content attribute for the <meta property="${e}" content=""> tag is empty`):s.push(`This HTML without <meta property="${e}"> tag`)}),r(s)})}};class c{result(t){this._logResult(t)}error(t){this._logError(t)}success(t){this._logSuccess(t)}info(t){this._logInfo(t)}printTextToConsole(t){const e=t.replace(" ","|");i.say(e,{font:"block",align:"left",colors:["system"],background:"transparent",letterSpacing:1,lineHeight:1,space:!0,maxLength:"0",gradient:!1,independentGradient:!1,transitionGradient:!1,env:"node"})}_logResult(t){if(!t.some(t=>t.report.length))return this._logSuccess("👍 SEO defects were not detected.\n");this._logInfo("\n🚀  Report of errors");for(const e of t)this._logInfo("\nFile: "+e.source.trim()),this._logError(""+e.report.join("\n"));return this._logSuccess("\n-------- 🚀 Finished! --------\nThanks for using Seo Analyzer!\n"),process.exit(1)}_logError(t){console.error(""+n.red(t))}_logInfo(t){console.log(""+n.yellow(t))}_logSuccess(t){console.log(""+n.green(t))}}class g{constructor(){this.consoleProgressBar=new o.Bar({format:"Processing... |"+n.green("{bar}")+"| {percentage}% || {value}/{total} Pages",barCompleteChar:"█",barIncompleteChar:"░",hideCursor:!0}),this.logger=new c,this.inputUrl="",this.ignoreUrls=""}async run(t,e){this.inputUrl="http://localhost:"+t,this.ignoreUrls=e;const r=await this._getLinksFromSitemap();return await this._getHtmlDomFromLinks(r)}_getLinksFromSitemap(){return this.logger.info(`🚀  Get sitemap from ${this.inputUrl}\n`),new Promise(t=>{const e=this.inputUrl+"/sitemap.xml",r=[];l.parseSitemaps(e,t=>{const e=t.replace(/^.*\/\/[^/]+/,"");-1===this.ignoreUrls.indexOf(e)&&r.push(this._formatLink(t))},e=>{e?(this.logger.error("❌  Sitemap not found\n"),process.exit(1)):0===r.length?(this.logger.error("❌  Links not found\n"),process.exit(1)):(this.logger.success("✅  Done\n"),t(r))})})}_formatLink(t){return t.replace(/^.*\/\/[^/]+/,this.inputUrl)}sleep(t){return new Promise(e=>setTimeout(e,t))}async _getHtmlDomFromLinks(t){const e=[],r=[];this.logger.info("🚀  Parsing HTML\n"),this.consoleProgressBar.start(t.length,0);for(const s of t)r.push(a.get(s).then(t=>{t&&200===t.status&&e.push({source:s,text:t.data})}).catch(t=>{const e=t&&t.response&&t.response.status||500;console.log(`Error: ${t} - ${s}`),console.log(`\n${n.yellow("==>")} ${n.white(s)} ${n.red(e)}`)}).finally(()=>{this.consoleProgressBar.increment()})),await this.sleep(500);return Promise.all(r).then(()=>(this.consoleProgressBar.stop(),e))}}class p{constructor(){this.logger=new c,this.scraper=new g,this.consoleProgressBar=new o.Bar({format:"Processing... |"+n.green("{bar}")+"| {percentage}% || {value}/{total} Folders",barCompleteChar:"█",barIncompleteChar:"░",hideCursor:!0}),this.badType='The inputFiles function takes an array only ["index.html", "...", "..."]',this.emptyList='You need to pass an array to the inputFiles function ["index.html", "...", "..."]',this.ignoreFolders=[],this.ignoreFiles=[]}async files(t=[],e=[]){this.logger.info("\n🚀  Analysis of files"),0===t.length&&this.logger.error(this.emptyList),Array.isArray(t)||this.logger.error(this.badType),this.ignoreFiles=e;const r=await this._getHtml(t);return await this._getDom(r)}async folders(t=[],e=[],r=[]){this.logger.info("🚀  Parsing folders\n"),this.consoleProgressBar.start(t.length,0),this.ignoreFolders=e,this.ignoreFiles=r;const s=await this._getFilesFromFolders(t);return await this.files(s,r)}async spa(t,e=[]){const r=await this.scraper.run(t,e);return await this._getDom(r)}async _getFilesFromFolders(t=[]){const e=[];for(const r of t){const t=await this._getFilesFromFolder(r);this.consoleProgressBar.increment(),e.push(...t)}return this.consoleProgressBar.stop(),e}_getFilesFromFolder(r=[]){try{const s=t.readdirSync(r).map(t=>e.join(r,t)),o=s.filter(r=>t.statSync(r).isFile()&&".html"===e.extname(r)),n=s.filter(e=>!o.includes(e)&&t.statSync(e).isDirectory()).filter(t=>!this.ignoreFolders.includes(t)).reduce((t,e)=>t.concat(this._getFilesFromFolder(e)),[]);return[...o,...n]}catch(t){return this.logger.error(`Folder "${r}" not found`),[]}}_getHtml(e){const r=[];return e.forEach(e=>{if(!this.ignoreFiles.includes(e))try{const s=t.readFileSync(e,"utf8");r.push({source:e,text:s})}catch(t){this.logger.error(`File "${e}" not found`)}}),r}_getDom(t){const e=[],i=new o.Bar({format:"Handling html |"+n.green("{bar}")+"| {percentage}% || {value}/{total} Sources",barCompleteChar:"█",barIncompleteChar:"░",hideCursor:!0});this.logger.info("\n🚀  Get DOM from HTML\n"),i.start(t.length,0);const a=new r;return t.forEach(t=>{let r=new s(t.text,{virtualConsole:a});e.push({source:t.source,dom:r}),i.increment()}),i.stop(),e}}class m{constructor(){this.consoleProgressBar=new o.Bar({format:"Ranning rules |"+n.green("{bar}")+"| {percentage}% || {value}/{total} Rules",barCompleteChar:"█",barIncompleteChar:"░",hideCursor:!0}),this.badType='The inputFiles function takes an array only ["index.html", "...", "..."]',this.emptyList='You need to pass an array to the inputFiles function ["index.html", "...", "..."]'}async run(t,e){0===t.length&&this.logger.error(this.emptyList),Array.isArray(t)||this.logger.error(this.badType);return await this._startAnalyzer(t,e)}async _startAnalyzer(t,e){const r=[];for(const s of t){console.log(`\n${n.blue("==>")} Analysis ${n.white(s.source)}`);const t=await this._analyzeDOM(s.dom,e);t&&t.length&&r.push({source:s.source,report:t})}return r}async _analyzeDOM(t,e){const r=[];this.consoleProgressBar.start(e.length,0);for(const s of e){let e=null;try{e=await s.rule(t,s.options)}catch(t){e=t}Array.isArray(e)?r.push(...e):e&&r.push(e),this.consoleProgressBar.increment()}return this.consoleProgressBar.stop(),r}}class f{constructor(){this.analyzer=new m}async object(t,e){return await this.analyzer.run(t,e)}async json(t,e){const r=await this.analyzer.run(t,e);return JSON.stringify(r,null,2)}}const d=h(),w=new c;class y{constructor(){return this.logger=new c,this.input=new p,this.output=new f,this.inputData=[],this.rules=[],this._ignoreFolders=[],this._ignoreFiles=[],this._ignoreUrls=[],this}ignoreFiles(t){return this._ignoreFiles=t,this}ignoreFolders(t){return this._ignoreFolders=t,this}ignoreUrls(t){return this._ignoreUrls=t,this}inputFiles(t){return 0!==this.inputData.length||(this.logger.printTextToConsole("Seo Analyzer"),this.inputData=this.input.files(t,this._ignoreFiles)),this}inputFolders(t){return 0!==this.inputData.length||(this.logger.printTextToConsole("Seo Analyzer"),this.inputData=this.input.folders(t,this._ignoreFolders,this._ignoreFiles)),this}inputSpaFolder(t,r=9999){return this.inputData?(this.logger.printTextToConsole("Seo Analyzer"),function(t,r){d.use(h.static(t)),d.get("/",(t,r)=>{r.sendFile(e.join(__dirname,"/index.html"))}),d.listen(r),w.info(`🚀  Server started on port ${r}\n`),w.success("✅  Done\n")}(t,r),this.inputData=this.input.spa(r,this._ignoreUrls),this):this}addRule(t,e={}){return"string"==typeof t?t in u&&this.rules.push({rule:u[t],options:e}):this.rules.push({rule:t,options:e}),this}outputConsole(){return(async()=>{const t=await this.output.object(await this.inputData,this.rules);this.logger.result(t)})(),this}outputJson(t){return(async()=>{const e=await this.output.json(await this.inputData,this.rules);t(e)})(),this}outputObject(t){return(async()=>{const e=await this.output.object(await this.inputData,this.rules);t(e)})(),this}}export{y as default};
